#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace VT.DCM.Server
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="VT")]
	public partial class VTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertCarInfo(CarInfo instance);
    partial void UpdateCarInfo(CarInfo instance);
    partial void DeleteCarInfo(CarInfo instance);
    partial void InsertCoordinateType(CoordinateType instance);
    partial void UpdateCoordinateType(CoordinateType instance);
    partial void DeleteCoordinateType(CoordinateType instance);
    partial void InsertDeviceInfo(DeviceInfo instance);
    partial void UpdateDeviceInfo(DeviceInfo instance);
    partial void DeleteDeviceInfo(DeviceInfo instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    #endregion
		
		public VTDataContext() : 
				base(global::VT.DCM.Server.Properties.Settings.Default.VTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CarInfo> CarInfo
		{
			get
			{
				return this.GetTable<CarInfo>();
			}
		}
		
		public System.Data.Linq.Table<CoordinateType> CoordinateType
		{
			get
			{
				return this.GetTable<CoordinateType>();
			}
		}
		
		public System.Data.Linq.Table<DeviceInfo> DeviceInfo
		{
			get
			{
				return this.GetTable<DeviceInfo>();
			}
		}
		
		public System.Data.Linq.Table<Location> Location
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarInfo")]
	public partial class CarInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DeviceID;
		
		private string _Driver;
		
		private string _CarNumber;
		
		private string _CellphoneNumber;
		
		private EntityRef<DeviceInfo> _DeviceInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDeviceIDChanging(string value);
    partial void OnDeviceIDChanged();
    partial void OnDriverChanging(string value);
    partial void OnDriverChanged();
    partial void OnCarNumberChanging(string value);
    partial void OnCarNumberChanged();
    partial void OnCellphoneNumberChanging(string value);
    partial void OnCellphoneNumberChanged();
    #endregion
		
		public CarInfo()
		{
			this._DeviceInfo = default(EntityRef<DeviceInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="Char(20)")]
		public string DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					if (this._DeviceInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver", DbType="NVarChar(10)")]
		public string Driver
		{
			get
			{
				return this._Driver;
			}
			set
			{
				if ((this._Driver != value))
				{
					this.OnDriverChanging(value);
					this.SendPropertyChanging();
					this._Driver = value;
					this.SendPropertyChanged("Driver");
					this.OnDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarNumber", DbType="NChar(7)")]
		public string CarNumber
		{
			get
			{
				return this._CarNumber;
			}
			set
			{
				if ((this._CarNumber != value))
				{
					this.OnCarNumberChanging(value);
					this.SendPropertyChanging();
					this._CarNumber = value;
					this.SendPropertyChanged("CarNumber");
					this.OnCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellphoneNumber", DbType="Char(11)")]
		public string CellphoneNumber
		{
			get
			{
				return this._CellphoneNumber;
			}
			set
			{
				if ((this._CellphoneNumber != value))
				{
					this.OnCellphoneNumberChanging(value);
					this.SendPropertyChanging();
					this._CellphoneNumber = value;
					this.SendPropertyChanged("CellphoneNumber");
					this.OnCellphoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeviceInfo_CarInfo", Storage="_DeviceInfo", ThisKey="DeviceID", OtherKey="DeviceID", IsForeignKey=true)]
		public DeviceInfo DeviceInfo
		{
			get
			{
				return this._DeviceInfo.Entity;
			}
			set
			{
				DeviceInfo previousValue = this._DeviceInfo.Entity;
				if (((previousValue != value) 
							|| (this._DeviceInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeviceInfo.Entity = null;
						previousValue.CarInfo.Remove(this);
					}
					this._DeviceInfo.Entity = value;
					if ((value != null))
					{
						value.CarInfo.Add(this);
						this._DeviceID = value.DeviceID;
					}
					else
					{
						this._DeviceID = default(string);
					}
					this.SendPropertyChanged("DeviceInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoordinateType")]
	public partial class CoordinateType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CoordinateTypeID;
		
		private string _CoordinateTypeName;
		
		private EntitySet<Location> _Location;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCoordinateTypeIDChanging(int value);
    partial void OnCoordinateTypeIDChanged();
    partial void OnCoordinateTypeNameChanging(string value);
    partial void OnCoordinateTypeNameChanged();
    #endregion
		
		public CoordinateType()
		{
			this._Location = new EntitySet<Location>(new Action<Location>(this.attach_Location), new Action<Location>(this.detach_Location));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoordinateTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CoordinateTypeID
		{
			get
			{
				return this._CoordinateTypeID;
			}
			set
			{
				if ((this._CoordinateTypeID != value))
				{
					this.OnCoordinateTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CoordinateTypeID = value;
					this.SendPropertyChanged("CoordinateTypeID");
					this.OnCoordinateTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoordinateTypeName", DbType="Char(3)")]
		public string CoordinateTypeName
		{
			get
			{
				return this._CoordinateTypeName;
			}
			set
			{
				if ((this._CoordinateTypeName != value))
				{
					this.OnCoordinateTypeNameChanging(value);
					this.SendPropertyChanging();
					this._CoordinateTypeName = value;
					this.SendPropertyChanged("CoordinateTypeName");
					this.OnCoordinateTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoordinateType_Location", Storage="_Location", ThisKey="CoordinateTypeID", OtherKey="CoordinateTypeID")]
		public EntitySet<Location> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				this._Location.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.CoordinateType = this;
		}
		
		private void detach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.CoordinateType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeviceInfo")]
	public partial class DeviceInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DeviceID;
		
		private string _CellphoneNumber;
		
		private EntitySet<CarInfo> _CarInfo;
		
		private EntitySet<Location> _Location;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeviceIDChanging(string value);
    partial void OnDeviceIDChanged();
    partial void OnCellphoneNumberChanging(string value);
    partial void OnCellphoneNumberChanged();
    #endregion
		
		public DeviceInfo()
		{
			this._CarInfo = new EntitySet<CarInfo>(new Action<CarInfo>(this.attach_CarInfo), new Action<CarInfo>(this.detach_CarInfo));
			this._Location = new EntitySet<Location>(new Action<Location>(this.attach_Location), new Action<Location>(this.detach_Location));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="Char(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellphoneNumber", DbType="Char(11)")]
		public string CellphoneNumber
		{
			get
			{
				return this._CellphoneNumber;
			}
			set
			{
				if ((this._CellphoneNumber != value))
				{
					this.OnCellphoneNumberChanging(value);
					this.SendPropertyChanging();
					this._CellphoneNumber = value;
					this.SendPropertyChanged("CellphoneNumber");
					this.OnCellphoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeviceInfo_CarInfo", Storage="_CarInfo", ThisKey="DeviceID", OtherKey="DeviceID")]
		public EntitySet<CarInfo> CarInfo
		{
			get
			{
				return this._CarInfo;
			}
			set
			{
				this._CarInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeviceInfo_Location", Storage="_Location", ThisKey="DeviceID", OtherKey="DeviceID")]
		public EntitySet<Location> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				this._Location.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarInfo(CarInfo entity)
		{
			this.SendPropertyChanging();
			entity.DeviceInfo = this;
		}
		
		private void detach_CarInfo(CarInfo entity)
		{
			this.SendPropertyChanging();
			entity.DeviceInfo = null;
		}
		
		private void attach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.DeviceInfo = this;
		}
		
		private void detach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.DeviceInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _DeviceID;
		
		private System.DateTime _GpsTime;
		
		private System.Nullable<int> _SatelliteNum;
		
		private decimal _GpsLongitude;
		
		private decimal _GpsLatitude;
		
		private System.Nullable<decimal> _BaiduLongitude;
		
		private System.Nullable<decimal> _BaiduLatitude;
		
		private System.Nullable<int> _Direction;
		
		private System.Nullable<int> _GpsSpeed;
		
		private System.Nullable<int> _ObdSpeed;
		
		private System.Nullable<int> _EngineTemperature;
		
		private System.Nullable<int> _CoordinateTypeID;
		
		private EntityRef<CoordinateType> _CoordinateType;
		
		private EntityRef<DeviceInfo> _DeviceInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnDeviceIDChanging(string value);
    partial void OnDeviceIDChanged();
    partial void OnGpsTimeChanging(System.DateTime value);
    partial void OnGpsTimeChanged();
    partial void OnSatelliteNumChanging(System.Nullable<int> value);
    partial void OnSatelliteNumChanged();
    partial void OnGpsLongitudeChanging(decimal value);
    partial void OnGpsLongitudeChanged();
    partial void OnGpsLatitudeChanging(decimal value);
    partial void OnGpsLatitudeChanged();
    partial void OnBaiduLongitudeChanging(System.Nullable<decimal> value);
    partial void OnBaiduLongitudeChanged();
    partial void OnBaiduLatitudeChanging(System.Nullable<decimal> value);
    partial void OnBaiduLatitudeChanged();
    partial void OnDirectionChanging(System.Nullable<int> value);
    partial void OnDirectionChanged();
    partial void OnGpsSpeedChanging(System.Nullable<int> value);
    partial void OnGpsSpeedChanged();
    partial void OnObdSpeedChanging(System.Nullable<int> value);
    partial void OnObdSpeedChanged();
    partial void OnEngineTemperatureChanging(System.Nullable<int> value);
    partial void OnEngineTemperatureChanged();
    partial void OnCoordinateTypeIDChanging(System.Nullable<int> value);
    partial void OnCoordinateTypeIDChanged();
    #endregion
		
		public Location()
		{
			this._CoordinateType = default(EntityRef<CoordinateType>);
			this._DeviceInfo = default(EntityRef<DeviceInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					if (this._DeviceInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GpsTime", DbType="DateTime NOT NULL")]
		public System.DateTime GpsTime
		{
			get
			{
				return this._GpsTime;
			}
			set
			{
				if ((this._GpsTime != value))
				{
					this.OnGpsTimeChanging(value);
					this.SendPropertyChanging();
					this._GpsTime = value;
					this.SendPropertyChanged("GpsTime");
					this.OnGpsTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SatelliteNum", DbType="Int")]
		public System.Nullable<int> SatelliteNum
		{
			get
			{
				return this._SatelliteNum;
			}
			set
			{
				if ((this._SatelliteNum != value))
				{
					this.OnSatelliteNumChanging(value);
					this.SendPropertyChanging();
					this._SatelliteNum = value;
					this.SendPropertyChanged("SatelliteNum");
					this.OnSatelliteNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GpsLongitude", DbType="Decimal(18,10) NOT NULL")]
		public decimal GpsLongitude
		{
			get
			{
				return this._GpsLongitude;
			}
			set
			{
				if ((this._GpsLongitude != value))
				{
					this.OnGpsLongitudeChanging(value);
					this.SendPropertyChanging();
					this._GpsLongitude = value;
					this.SendPropertyChanged("GpsLongitude");
					this.OnGpsLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GpsLatitude", DbType="Decimal(18,10) NOT NULL")]
		public decimal GpsLatitude
		{
			get
			{
				return this._GpsLatitude;
			}
			set
			{
				if ((this._GpsLatitude != value))
				{
					this.OnGpsLatitudeChanging(value);
					this.SendPropertyChanging();
					this._GpsLatitude = value;
					this.SendPropertyChanged("GpsLatitude");
					this.OnGpsLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaiduLongitude", DbType="Decimal(18,10)")]
		public System.Nullable<decimal> BaiduLongitude
		{
			get
			{
				return this._BaiduLongitude;
			}
			set
			{
				if ((this._BaiduLongitude != value))
				{
					this.OnBaiduLongitudeChanging(value);
					this.SendPropertyChanging();
					this._BaiduLongitude = value;
					this.SendPropertyChanged("BaiduLongitude");
					this.OnBaiduLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaiduLatitude", DbType="Decimal(18,10)")]
		public System.Nullable<decimal> BaiduLatitude
		{
			get
			{
				return this._BaiduLatitude;
			}
			set
			{
				if ((this._BaiduLatitude != value))
				{
					this.OnBaiduLatitudeChanging(value);
					this.SendPropertyChanging();
					this._BaiduLatitude = value;
					this.SendPropertyChanged("BaiduLatitude");
					this.OnBaiduLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="Int")]
		public System.Nullable<int> Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GpsSpeed", DbType="Int")]
		public System.Nullable<int> GpsSpeed
		{
			get
			{
				return this._GpsSpeed;
			}
			set
			{
				if ((this._GpsSpeed != value))
				{
					this.OnGpsSpeedChanging(value);
					this.SendPropertyChanging();
					this._GpsSpeed = value;
					this.SendPropertyChanged("GpsSpeed");
					this.OnGpsSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObdSpeed", DbType="Int")]
		public System.Nullable<int> ObdSpeed
		{
			get
			{
				return this._ObdSpeed;
			}
			set
			{
				if ((this._ObdSpeed != value))
				{
					this.OnObdSpeedChanging(value);
					this.SendPropertyChanging();
					this._ObdSpeed = value;
					this.SendPropertyChanged("ObdSpeed");
					this.OnObdSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineTemperature", DbType="Int")]
		public System.Nullable<int> EngineTemperature
		{
			get
			{
				return this._EngineTemperature;
			}
			set
			{
				if ((this._EngineTemperature != value))
				{
					this.OnEngineTemperatureChanging(value);
					this.SendPropertyChanging();
					this._EngineTemperature = value;
					this.SendPropertyChanged("EngineTemperature");
					this.OnEngineTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoordinateTypeID", DbType="Int")]
		public System.Nullable<int> CoordinateTypeID
		{
			get
			{
				return this._CoordinateTypeID;
			}
			set
			{
				if ((this._CoordinateTypeID != value))
				{
					if (this._CoordinateType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCoordinateTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CoordinateTypeID = value;
					this.SendPropertyChanged("CoordinateTypeID");
					this.OnCoordinateTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoordinateType_Location", Storage="_CoordinateType", ThisKey="CoordinateTypeID", OtherKey="CoordinateTypeID", IsForeignKey=true)]
		public CoordinateType CoordinateType
		{
			get
			{
				return this._CoordinateType.Entity;
			}
			set
			{
				CoordinateType previousValue = this._CoordinateType.Entity;
				if (((previousValue != value) 
							|| (this._CoordinateType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoordinateType.Entity = null;
						previousValue.Location.Remove(this);
					}
					this._CoordinateType.Entity = value;
					if ((value != null))
					{
						value.Location.Add(this);
						this._CoordinateTypeID = value.CoordinateTypeID;
					}
					else
					{
						this._CoordinateTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CoordinateType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeviceInfo_Location", Storage="_DeviceInfo", ThisKey="DeviceID", OtherKey="DeviceID", IsForeignKey=true)]
		public DeviceInfo DeviceInfo
		{
			get
			{
				return this._DeviceInfo.Entity;
			}
			set
			{
				DeviceInfo previousValue = this._DeviceInfo.Entity;
				if (((previousValue != value) 
							|| (this._DeviceInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeviceInfo.Entity = null;
						previousValue.Location.Remove(this);
					}
					this._DeviceInfo.Entity = value;
					if ((value != null))
					{
						value.Location.Add(this);
						this._DeviceID = value.DeviceID;
					}
					else
					{
						this._DeviceID = default(string);
					}
					this.SendPropertyChanged("DeviceInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
