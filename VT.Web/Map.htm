<!DOCTYPE html>

<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
    <style type="text/css">
        body, html, #container
        {
            width: 100%;
            height: 100%;
            overflow: hidden;
            margin: 0;
        }
    </style>
    <title>有方向的折线覆盖物</title>
    <script type="text/javascript" src="http://api.map.baidu.com/api?v=1.3"></script>
    <script src="jquery-1.10.2.js" type="text/javascript"></script>
</head>
<body>
    <div id="container">
    </div>
</body>
</html>
<script type="text/javascript">
    var map = new BMap.Map("container");

    map.addControl(new BMap.NavigationControl());               // 添加平移缩放控件
    map.addControl(new BMap.ScaleControl());                    // 添加比例尺控件
    map.addControl(new BMap.OverviewMapControl());              // 添加缩略地图控件
    map.enableScrollWheelZoom();                                // 启用滚轮放大缩小
    //map.addControl(new BMap.MapTypeControl());                  // 添加地图类型控件
    //map.setCurrentCity("成都");                               // 设置地图显示的城市 此项是必须设置的
    //map.addControl(new BMap.NavigationControl({ anchor: BMAP_ANCHOR_TOP_RIGHT, type: BMAP_NAVIGATION_CONTROL_SMALL }));      //右上角，仅包含平移和缩放按钮
    //map.addControl(new BMap.NavigationControl({ anchor: BMAP_ANCHOR_BOTTOM_LEFT, type: BMAP_NAVIGATION_CONTROL_PAN }));      //左下角，仅包含平移按钮
    //map.addControl(new BMap.NavigationControl({ anchor: BMAP_ANCHOR_BOTTOM_RIGHT, type: BMAP_NAVIGATION_CONTROL_ZOOM }));    //右下角，仅包含缩放按钮

    jQuery.ajax({
        type: "GET",
        url: "/handler/location",
        success: function (data, textStatus) {
            var points = [];
            var pos = data.split(";");
            jQuery.each(pos, function (key, val) {
                var coord = val.split(",");
                points.push(new BMap.Point(coord[0], coord[1]));
            });

            var point = points[Math.ceil(points.length / 2)];
            map.centerAndZoom(point, 13);

            var polyline = new BMap.Polyline(points, { strokeColor: "blue", strokeWeight: 5, strokeOpacity: 0.8 });
            map.addOverlay(polyline);

            for (var i = points.length - 1; i > 0; i--) {
                var angle = getAngle(points[i], points[i - 1]);
                drawMarker(points[i], angle);
            }
        }
    });

    //return: -PI to PI
    function getAngle(pt1, pt2) {
        return Math.atan2(pt2.lat - pt1.lat, pt2.lng - pt1.lng);
    }

    function drawMarker(point, angle) {
        var iconImg = createIcon(angle);
        var marker = new BMap.Marker(point, {
            icon: iconImg
        });

        map.addOverlay(marker);
    }

    function createIcon(angle) {
        //从负Y轴方向开始顺时针查找角度
        var adjAngles = [180, 202, 225, 247, 270, 292, 315, 337, 0, 22, 45, 67, 90, 112, 135, 157];
        adjAngle = angle;

        var adjIndex = 0;
        for (var i = 0; i < 16; i++) {
            if (adjAngle < (-15 / 16 + i / 8) * Math.PI) {
                adjIndex = i;
                break;
            }
        }

        icon = new BMap.Icon("images/direction/arrow_" + adjAngles[adjIndex] + ".png", new BMap.Size(22, 22));
        return icon;
    }
</script>
