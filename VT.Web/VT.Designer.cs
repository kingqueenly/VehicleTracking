//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("VTModel", "FK_CarInfo_DeviceInfo", "DeviceInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VT.Web.DeviceInfo), "CarInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VT.Web.CarInfo), true)]
[assembly: EdmRelationshipAttribute("VTModel", "FK_Location_CoordinateType", "CoordinateType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VT.Web.CoordinateType), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VT.Web.Location), true)]
[assembly: EdmRelationshipAttribute("VTModel", "FK_Location_DeviceInfo", "DeviceInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VT.Web.DeviceInfo), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VT.Web.Location), true)]

#endregion

namespace VT.Web
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class VTEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“VTEntities”部分中的连接字符串初始化新 VTEntities 对象。
        /// </summary>
        public VTEntities() : base("name=VTEntities", "VTEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 VTEntities 对象。
        /// </summary>
        public VTEntities(string connectionString) : base(connectionString, "VTEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 VTEntities 对象。
        /// </summary>
        public VTEntities(EntityConnection connection) : base(connection, "VTEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<CarInfo> CarInfoes
        {
            get
            {
                if ((_CarInfoes == null))
                {
                    _CarInfoes = base.CreateObjectSet<CarInfo>("CarInfoes");
                }
                return _CarInfoes;
            }
        }
        private ObjectSet<CarInfo> _CarInfoes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<CoordinateType> CoordinateTypes
        {
            get
            {
                if ((_CoordinateTypes == null))
                {
                    _CoordinateTypes = base.CreateObjectSet<CoordinateType>("CoordinateTypes");
                }
                return _CoordinateTypes;
            }
        }
        private ObjectSet<CoordinateType> _CoordinateTypes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<DeviceInfo> DeviceInfoes
        {
            get
            {
                if ((_DeviceInfoes == null))
                {
                    _DeviceInfoes = base.CreateObjectSet<DeviceInfo>("DeviceInfoes");
                }
                return _DeviceInfoes;
            }
        }
        private ObjectSet<DeviceInfo> _DeviceInfoes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TMP> TMPs
        {
            get
            {
                if ((_TMPs == null))
                {
                    _TMPs = base.CreateObjectSet<TMP>("TMPs");
                }
                return _TMPs;
            }
        }
        private ObjectSet<TMP> _TMPs;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 CarInfoes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCarInfoes(CarInfo carInfo)
        {
            base.AddObject("CarInfoes", carInfo);
        }
    
        /// <summary>
        /// 用于向 CoordinateTypes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCoordinateTypes(CoordinateType coordinateType)
        {
            base.AddObject("CoordinateTypes", coordinateType);
        }
    
        /// <summary>
        /// 用于向 DeviceInfoes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDeviceInfoes(DeviceInfo deviceInfo)
        {
            base.AddObject("DeviceInfoes", deviceInfo);
        }
    
        /// <summary>
        /// 用于向 Locations EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// 用于向 TMPs EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTMPs(TMP tMP)
        {
            base.AddObject("TMPs", tMP);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VTModel", Name="CarInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 CarInfo 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static CarInfo CreateCarInfo(global::System.Int32 id)
        {
            CarInfo carInfo = new CarInfo();
            carInfo.ID = id;
            return carInfo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeviceID
        {
            get
            {
                return _DeviceID;
            }
            set
            {
                OnDeviceIDChanging(value);
                ReportPropertyChanging("DeviceID");
                _DeviceID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeviceID");
                OnDeviceIDChanged();
            }
        }
        private global::System.String _DeviceID;
        partial void OnDeviceIDChanging(global::System.String value);
        partial void OnDeviceIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Driver
        {
            get
            {
                return _Driver;
            }
            set
            {
                OnDriverChanging(value);
                ReportPropertyChanging("Driver");
                _Driver = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Driver");
                OnDriverChanged();
            }
        }
        private global::System.String _Driver;
        partial void OnDriverChanging(global::System.String value);
        partial void OnDriverChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CarNumber
        {
            get
            {
                return _CarNumber;
            }
            set
            {
                OnCarNumberChanging(value);
                ReportPropertyChanging("CarNumber");
                _CarNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CarNumber");
                OnCarNumberChanged();
            }
        }
        private global::System.String _CarNumber;
        partial void OnCarNumberChanging(global::System.String value);
        partial void OnCarNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CellphoneNumber
        {
            get
            {
                return _CellphoneNumber;
            }
            set
            {
                OnCellphoneNumberChanging(value);
                ReportPropertyChanging("CellphoneNumber");
                _CellphoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CellphoneNumber");
                OnCellphoneNumberChanged();
            }
        }
        private global::System.String _CellphoneNumber;
        partial void OnCellphoneNumberChanging(global::System.String value);
        partial void OnCellphoneNumberChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VTModel", "FK_CarInfo_DeviceInfo", "DeviceInfo")]
        public DeviceInfo DeviceInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceInfo>("VTModel.FK_CarInfo_DeviceInfo", "DeviceInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceInfo>("VTModel.FK_CarInfo_DeviceInfo", "DeviceInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DeviceInfo> DeviceInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceInfo>("VTModel.FK_CarInfo_DeviceInfo", "DeviceInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DeviceInfo>("VTModel.FK_CarInfo_DeviceInfo", "DeviceInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VTModel", Name="CoordinateType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CoordinateType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 CoordinateType 对象。
        /// </summary>
        /// <param name="coordinateTypeID">CoordinateTypeID 属性的初始值。</param>
        public static CoordinateType CreateCoordinateType(global::System.Int32 coordinateTypeID)
        {
            CoordinateType coordinateType = new CoordinateType();
            coordinateType.CoordinateTypeID = coordinateTypeID;
            return coordinateType;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CoordinateTypeID
        {
            get
            {
                return _CoordinateTypeID;
            }
            set
            {
                if (_CoordinateTypeID != value)
                {
                    OnCoordinateTypeIDChanging(value);
                    ReportPropertyChanging("CoordinateTypeID");
                    _CoordinateTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CoordinateTypeID");
                    OnCoordinateTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CoordinateTypeID;
        partial void OnCoordinateTypeIDChanging(global::System.Int32 value);
        partial void OnCoordinateTypeIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoordinateTypeName
        {
            get
            {
                return _CoordinateTypeName;
            }
            set
            {
                OnCoordinateTypeNameChanging(value);
                ReportPropertyChanging("CoordinateTypeName");
                _CoordinateTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CoordinateTypeName");
                OnCoordinateTypeNameChanged();
            }
        }
        private global::System.String _CoordinateTypeName;
        partial void OnCoordinateTypeNameChanging(global::System.String value);
        partial void OnCoordinateTypeNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VTModel", "FK_Location_CoordinateType", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("VTModel.FK_Location_CoordinateType", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("VTModel.FK_Location_CoordinateType", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VTModel", Name="DeviceInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeviceInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 DeviceInfo 对象。
        /// </summary>
        /// <param name="deviceID">DeviceID 属性的初始值。</param>
        public static DeviceInfo CreateDeviceInfo(global::System.String deviceID)
        {
            DeviceInfo deviceInfo = new DeviceInfo();
            deviceInfo.DeviceID = deviceID;
            return deviceInfo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeviceID
        {
            get
            {
                return _DeviceID;
            }
            set
            {
                if (_DeviceID != value)
                {
                    OnDeviceIDChanging(value);
                    ReportPropertyChanging("DeviceID");
                    _DeviceID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DeviceID");
                    OnDeviceIDChanged();
                }
            }
        }
        private global::System.String _DeviceID;
        partial void OnDeviceIDChanging(global::System.String value);
        partial void OnDeviceIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CellphoneNumber
        {
            get
            {
                return _CellphoneNumber;
            }
            set
            {
                OnCellphoneNumberChanging(value);
                ReportPropertyChanging("CellphoneNumber");
                _CellphoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CellphoneNumber");
                OnCellphoneNumberChanged();
            }
        }
        private global::System.String _CellphoneNumber;
        partial void OnCellphoneNumberChanging(global::System.String value);
        partial void OnCellphoneNumberChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VTModel", "FK_CarInfo_DeviceInfo", "CarInfo")]
        public EntityCollection<CarInfo> CarInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarInfo>("VTModel.FK_CarInfo_DeviceInfo", "CarInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarInfo>("VTModel.FK_CarInfo_DeviceInfo", "CarInfo", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VTModel", "FK_Location_DeviceInfo", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("VTModel.FK_Location_DeviceInfo", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("VTModel.FK_Location_DeviceInfo", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VTModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Location 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="deviceID">DeviceID 属性的初始值。</param>
        /// <param name="gpsTime">GpsTime 属性的初始值。</param>
        /// <param name="gpsLongitude">GpsLongitude 属性的初始值。</param>
        /// <param name="gpsLatitude">GpsLatitude 属性的初始值。</param>
        public static Location CreateLocation(global::System.Int64 id, global::System.String deviceID, global::System.DateTime gpsTime, global::System.Decimal gpsLongitude, global::System.Decimal gpsLatitude)
        {
            Location location = new Location();
            location.ID = id;
            location.DeviceID = deviceID;
            location.GpsTime = gpsTime;
            location.GpsLongitude = gpsLongitude;
            location.GpsLatitude = gpsLatitude;
            return location;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeviceID
        {
            get
            {
                return _DeviceID;
            }
            set
            {
                OnDeviceIDChanging(value);
                ReportPropertyChanging("DeviceID");
                _DeviceID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeviceID");
                OnDeviceIDChanged();
            }
        }
        private global::System.String _DeviceID;
        partial void OnDeviceIDChanging(global::System.String value);
        partial void OnDeviceIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime GpsTime
        {
            get
            {
                return _GpsTime;
            }
            set
            {
                OnGpsTimeChanging(value);
                ReportPropertyChanging("GpsTime");
                _GpsTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GpsTime");
                OnGpsTimeChanged();
            }
        }
        private global::System.DateTime _GpsTime;
        partial void OnGpsTimeChanging(global::System.DateTime value);
        partial void OnGpsTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SatelliteNum
        {
            get
            {
                return _SatelliteNum;
            }
            set
            {
                OnSatelliteNumChanging(value);
                ReportPropertyChanging("SatelliteNum");
                _SatelliteNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SatelliteNum");
                OnSatelliteNumChanged();
            }
        }
        private Nullable<global::System.Int32> _SatelliteNum;
        partial void OnSatelliteNumChanging(Nullable<global::System.Int32> value);
        partial void OnSatelliteNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal GpsLongitude
        {
            get
            {
                return _GpsLongitude;
            }
            set
            {
                OnGpsLongitudeChanging(value);
                ReportPropertyChanging("GpsLongitude");
                _GpsLongitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GpsLongitude");
                OnGpsLongitudeChanged();
            }
        }
        private global::System.Decimal _GpsLongitude;
        partial void OnGpsLongitudeChanging(global::System.Decimal value);
        partial void OnGpsLongitudeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal GpsLatitude
        {
            get
            {
                return _GpsLatitude;
            }
            set
            {
                OnGpsLatitudeChanging(value);
                ReportPropertyChanging("GpsLatitude");
                _GpsLatitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GpsLatitude");
                OnGpsLatitudeChanged();
            }
        }
        private global::System.Decimal _GpsLatitude;
        partial void OnGpsLatitudeChanging(global::System.Decimal value);
        partial void OnGpsLatitudeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BaiduLongitude
        {
            get
            {
                return _BaiduLongitude;
            }
            set
            {
                OnBaiduLongitudeChanging(value);
                ReportPropertyChanging("BaiduLongitude");
                _BaiduLongitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaiduLongitude");
                OnBaiduLongitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _BaiduLongitude;
        partial void OnBaiduLongitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnBaiduLongitudeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BaiduLatitude
        {
            get
            {
                return _BaiduLatitude;
            }
            set
            {
                OnBaiduLatitudeChanging(value);
                ReportPropertyChanging("BaiduLatitude");
                _BaiduLatitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaiduLatitude");
                OnBaiduLatitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _BaiduLatitude;
        partial void OnBaiduLatitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnBaiduLatitudeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Direction
        {
            get
            {
                return _Direction;
            }
            set
            {
                OnDirectionChanging(value);
                ReportPropertyChanging("Direction");
                _Direction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Direction");
                OnDirectionChanged();
            }
        }
        private Nullable<global::System.Int32> _Direction;
        partial void OnDirectionChanging(Nullable<global::System.Int32> value);
        partial void OnDirectionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GpsSpeed
        {
            get
            {
                return _GpsSpeed;
            }
            set
            {
                OnGpsSpeedChanging(value);
                ReportPropertyChanging("GpsSpeed");
                _GpsSpeed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GpsSpeed");
                OnGpsSpeedChanged();
            }
        }
        private Nullable<global::System.Int32> _GpsSpeed;
        partial void OnGpsSpeedChanging(Nullable<global::System.Int32> value);
        partial void OnGpsSpeedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObdSpeed
        {
            get
            {
                return _ObdSpeed;
            }
            set
            {
                OnObdSpeedChanging(value);
                ReportPropertyChanging("ObdSpeed");
                _ObdSpeed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObdSpeed");
                OnObdSpeedChanged();
            }
        }
        private Nullable<global::System.Int32> _ObdSpeed;
        partial void OnObdSpeedChanging(Nullable<global::System.Int32> value);
        partial void OnObdSpeedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EngineTemperature
        {
            get
            {
                return _EngineTemperature;
            }
            set
            {
                OnEngineTemperatureChanging(value);
                ReportPropertyChanging("EngineTemperature");
                _EngineTemperature = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EngineTemperature");
                OnEngineTemperatureChanged();
            }
        }
        private Nullable<global::System.Int32> _EngineTemperature;
        partial void OnEngineTemperatureChanging(Nullable<global::System.Int32> value);
        partial void OnEngineTemperatureChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CoordinateTypeID
        {
            get
            {
                return _CoordinateTypeID;
            }
            set
            {
                OnCoordinateTypeIDChanging(value);
                ReportPropertyChanging("CoordinateTypeID");
                _CoordinateTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoordinateTypeID");
                OnCoordinateTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CoordinateTypeID;
        partial void OnCoordinateTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCoordinateTypeIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VTModel", "FK_Location_CoordinateType", "CoordinateType")]
        public CoordinateType CoordinateType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CoordinateType>("VTModel.FK_Location_CoordinateType", "CoordinateType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CoordinateType>("VTModel.FK_Location_CoordinateType", "CoordinateType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CoordinateType> CoordinateTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CoordinateType>("VTModel.FK_Location_CoordinateType", "CoordinateType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CoordinateType>("VTModel.FK_Location_CoordinateType", "CoordinateType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VTModel", "FK_Location_DeviceInfo", "DeviceInfo")]
        public DeviceInfo DeviceInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceInfo>("VTModel.FK_Location_DeviceInfo", "DeviceInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceInfo>("VTModel.FK_Location_DeviceInfo", "DeviceInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DeviceInfo> DeviceInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeviceInfo>("VTModel.FK_Location_DeviceInfo", "DeviceInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DeviceInfo>("VTModel.FK_Location_DeviceInfo", "DeviceInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VTModel", Name="TMP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TMP : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TMP 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static TMP CreateTMP(global::System.Int64 id)
        {
            TMP tMP = new TMP();
            tMP.ID = id;
            return tMP;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BaiduLatitude
        {
            get
            {
                return _BaiduLatitude;
            }
            set
            {
                OnBaiduLatitudeChanging(value);
                ReportPropertyChanging("BaiduLatitude");
                _BaiduLatitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaiduLatitude");
                OnBaiduLatitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _BaiduLatitude;
        partial void OnBaiduLatitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnBaiduLatitudeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BaiduLongitude
        {
            get
            {
                return _BaiduLongitude;
            }
            set
            {
                OnBaiduLongitudeChanging(value);
                ReportPropertyChanging("BaiduLongitude");
                _BaiduLongitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaiduLongitude");
                OnBaiduLongitudeChanged();
            }
        }
        private Nullable<global::System.Decimal> _BaiduLongitude;
        partial void OnBaiduLongitudeChanging(Nullable<global::System.Decimal> value);
        partial void OnBaiduLongitudeChanged();

        #endregion

    
    }

    #endregion

    
}
